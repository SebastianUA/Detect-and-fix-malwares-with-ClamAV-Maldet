#!/bin/bash
#
# CREATED:
# vitaliy.natarov@yahoo.com
#
# Unix/Linux blog:
# http://linux-notes.org
# Vitaliy Natarov
#
# Set some colors for status OK, FAIL and titles
SETCOLOR_SUCCESS="echo -en \\033[1;32m"
SETCOLOR_FAILURE="echo -en \\033[1;31m"
SETCOLOR_NORMAL="echo -en \\033[0;39m"

SETCOLOR_TITLE="echo -en \\033[1;36m" #Fuscia
SETCOLOR_NUMBERS="echo -en \\033[0;34m" #BLUE
function Operation_status {  
	 if [ $? -eq 0 ]; then
		 $SETCOLOR_SUCCESS;	
		 echo -n "$(tput hpa $(tput cols))$(tput cub 6)[OK]"	
		 $SETCOLOR_NORMAL;
     		 echo;
	 else
		$SETCOLOR_FAILURE;
		echo -n "$(tput hpa $(tput cols))$(tput cub 6)[fail]"
		$SETCOLOR_NORMAL;
		echo;											
	 fi
}
# Dir for maldet reports
Maldet_report_dir="/root/maldet/reports"
if [ ! -d "$Maldet_report_dir" ]; then
	$SETCOLOR_TITLE
	echo "The Directory '$Maldet_report_dir' NOT FOUND";
	$SETCOLOR_NORMAL
	mkdir -p /root/maldet/reports
	$SETCOLOR_TITLE																		
	echo "The folder '$Maldet_report_dir' was CREATED";
	$SETCOLOR_NORMAL
else															
       $SETCOLOR_TITLE
       echo "The directory '$Maldet_report_dir' Exists"
       $SETCOLOR_NORMAL
fi
# LOGS
Unknown_malwares="/root/maldet/reports/Unknown_malwares.log"
if [ ! -f "$Unknown_malewares" ]; then
	$SETCOLOR_TITLE
	echo "The file Unknown_malwares.log NOT FOUND in the folder /root/maldet/reports";
	$SETCOLOR_NORMAL
	touch /root/maldet/reports/Unknown_malwares.log
	$SETCOLOR_TITLE
	echo "The file $Unknown_malwares was CREATED";
	$SETCOLOR_NORMAL
else
	$SETCOLOR_TITLE
	echo "The file '$Unknown_malwares' Exists"
	$SETCOLOR_NORMAL
fi	
LOG_FILE="/var/log/detect_and_fix_malwares.log"
if [ ! -f "$LOG_FILE" ]; then
	$SETCOLOR_TITLE
	echo "The file detect_and_fix_malwares.log NOT FOUND in the folder /var/log";
	$SETCOLOR_NORMAL
	touch $LOG_FILE
	$SETCOLOR_TITLE
	echo "The file $LOG_FILE was CREATED";
	$SETCOLOR_NORMAL
else
	$SETCOLOR_TITLE
	echo "The file '$LOG_FILE' Exists"
	rm -f $LOG_FILE
	touch $LOG_FILE
	$SETCOLOR_NORMAL	
fi
Database_malwares="/root/maldet/Database_malwares"
if [ ! -f "$Database_malwares" ]; then
	cd /root/maldet && wget --no-check-certificate https://raw.githubusercontent.com/SebastianUA/Detect-and-fix-malwares-with-ClamAV-Maldet/master/Database_malwares
	$SETCOLOR_TITLE
	echo "The file /root/maldet/Database_malwares was ADDED.";
	$SETCOLOR_NORMAL
else
	$SETCOLOR_TITLE
	rm -f  /root/maldet/Database_malwares
	cd /root/maldet && wget --no-check-certificate https://raw.githubusercontent.com/SebastianUA/Detect-and-fix-malwares-with-ClamAV-Maldet/master/Database_malwares
	echo "The file /root/maldet/Database_malwares EXISTS and was updated!"
	$SETCOLOR_NORMAL			     	  
fi
Scaned_users="/root/maldet/reports/scaned_users.log"
if [ ! -f "$Scaned_users" ]; then	
	touch $Scaned_users
else
        rm -f $Scaned_users
        touch $Scaned_users
fi
#for bloch IPs   
#Allow_IP_list="/root/maldet/reports/allow_ip_list.log"
Block_spamer_IP="/root/maldet/reports/block_spamer_ip.log"
if [ ! -f "$Block_spamer_IP" ]; then	
	touch $Block_spamer_IP
else
        rm -f $Block_spamer_IP
        touch $Block_spamer_IP
fi

exec > >(tee -a ${LOG_FILE} )
exec 2> >(tee -a ${LOG_FILE} >&2)

#Server IP
 Server_IP=$(cat /etc/hosts| grep "`hostname`"| awk '{print $1}')
#HostName
 HostName=$(hostname)
# Receiver email for Unknown_malewares.log and reports
 List_of_emails="vitaliy.natarov@yahoo.com"
##
All_folders_for_scan=$(tail -n 100000 /var/log/exim_mainlog| grep cwd=/home| cut -d"=" -f2| awk '{print $1}'| sort| uniq -c| awk '$1>200 {print $2}'|wc -l)
Users_which_send_spam=$(tail -n 100000 /var/log/exim_mainlog| grep cwd=/home| cut -d"=" -f2| awk '{print $1}'| sort| uniq -c| awk '$1>200 {print $2}'| cut -d"/" -f3)
# create the new function Maldet_scan
function Maldet_scan () {
	 if ! type -path "maldet" > /dev/null 2>&1; then 
			 cd /usr/local/src && wget http://www.rfxn.com/downloads/maldetect-current.tar.gz && tar -xzvf maldetect-current.tar.gz && cd maldetect-* && sh install.sh
			 cd ~
			 rm -rf /usr/local/src/maldetect-*
			 maldet -u > /dev/null 2>&1 && maldet -d > /dev/null 2>&1
			 rm -f /etc/cron.d/maldet_pub && rm -f /etc/cron.daily/maldet
			 $SETCOLOR_TITLE
			 echo "MALDET was INSTALLED and UPDATED!";
			 $SETCOLOR_NORMAL
	  else 
		$SETCOLOR_TITLE    
		echo "Maldet was INSTALLED on this server: `hostname`";
		$SETCOLOR_NORMAL
		maldet -u > /dev/null 2>&1 && maldet -d > /dev/null 2>&1
		$SETCOLOR_TITLE
		echo "MALDET was UPDATED!";
		$SETCOLOR_NORMAL
	 if [ -f "/etc/cron.d/maldet_pub" ]; then
		rm -f /etc/cron.d/maldet_pub
	 fi
	 if [ -f "/etc/cron.daily/maldet" ]; then
		rm -f /etc/cron.daily/maldet
	 fi					
	fi
	$SETCOLOR_TITLE
	echo "|=========================================================|";
	echo "|===================|Start maldet scan|===================|";
	echo "|=========================================================|";
	$SETCOLOR_NORMAL
	if [ "$All_folders_for_scan" -eq "0" ]; then
		 $SETCOLOR_TITLE
		 echo "Nothing... Will san 0 folders. EXIT!";
		 $SETCOLOR_NORMAL
		 rm -rf /root/maldet
		 rm -f /usr/local/src/detect_and_fix_malwares_*
		 # check and deleted queue
		 exit
	else
		$SETCOLOR_TITLE
		echo "Will scan: `echo $All_folders_for_scan` user's folders.....";	
		$SETCOLOR_NORMAL
		echo "*********************************************" >> $Scaned_users
		echo "HOSTNAME: `hostname` with IP: `echo $Server_IP`" >> $Scaned_users
		echo "*********************************************" >> $Scaned_users
		for i in `echo $Users_which_send_spam|xargs -I{} -n1 echo {}` ; do
         		$SETCOLOR_TITLE
		 		echo "---------------------------------------------------------------";
		 		echo "MALDET started the scanning '$i'";
		 		echo "The number of files in the folder '/home/$i/public_html' are: `find /home/$i/public_html -type f|wc -l`";
		 		#echo "The number of files in the folder '/home/$i/public_html' are: `ls -l -R /home/$i/public_html|grep ^-|wc -l`";
				echo "++++++++++++++++++++++++++++++++++++++++" >> $Scaned_users	
		  		`echo " /home/$i/public_html" >> $Scaned_users`
				echo "++++++++++++++++++++++++++++++++++++++++" >> $Scaned_users
		 		Start_maldet_scan=$(time /usr/local/sbin/maldet -co quarantine_hits=0 -a /home/$i/public_html > /root/maldet/reports/home-$i-$( date '+%Y-%m-%d_%H-%M-%S' ))            
		 		let "All_folders_for_scan -= 1"	 
		 		echo "Need to scan $All_folders_for_scan user's folder(s) more";
		 		$SETCOLOR_NORMAL 
		 		#parsing maldet reports
	     		        List_reports=$(ls -al /root/maldet/reports/home-$i-* | awk '{ print $9 }')
	     			if [ `echo $List_reports| wc -l` -eq 0 ]; then	                                      
		    			$SETCOLOR_TITLE
		    			echo "The folder /root/maldet/reports is EMPTY";
		    			$SETCOLOR_NORMAL
	     			else
	 	     			for report in `echo $List_reports|xargs -I{} -n1 echo {}`; do
			           	Count_malware_hits=$(cat $report |xargs -I{} -n1 echo {}| grep -E ".* malware hits .*"| awk ' {print "HITS: "$11}'| cut -d "," -f1)
			           	if [ "$(echo $Count_malware_hits| awk ' {print $2}')" == '0' ]; then
								$SETCOLOR_TITLE
								echo "HITS = 0";
								$SETCOLOR_NORMAL
								rm -f $report
								break; 
						else
								$SETCOLOR_TITLE	
								echo "HITS >0 ";
								$SETCOLOR_NORMAL
								Maldet_report_ID=$(cat $report | grep -E ".* maldet --report .*"| awk ' {print $11}')
								$SETCOLOR_TITLE
								echo "Maldet_report_ID = $Maldet_report_ID";
								echo "You could see this report, but you need to run: maldet --report $Maldet_report_ID "
								$SETCOLOR_NORMAL
								for report_ID in `echo $Maldet_report_ID|xargs -I{} -n1 echo {}`; do
										Output_file=$(EDITOR=cat maldet --report $report_ID > /root/maldet/reports/ID-$report_ID-date-$( date '+%Y-%m-%d_%H-%M-%S' ))
								done;
								Sed_and_Grep_ID=$(ls -al /root/maldet/reports/ID-$report_ID-* | awk '{ print $9 }'| cut -d "/" -f5)
								for report_greped_ID in `echo $Sed_and_Grep_ID|xargs -I{} -n1 echo {}`; do
										Output_file_for_fix=$(cat /root/maldet/reports/$report_greped_ID|sed '1,16d'|sed 'N;$!P;$!D;$d'|sort|uniq >> /root/maldet/reports/Output_file_for_fix.log)
										#echo "`cat /root/maldet/reports/Output_file_for_fix.log` ";
								done;
								Search_malwares_in_output_file_for_fix=$(cat /root/maldet/reports/Output_file_for_fix.log| awk '{print $1}'|sort|uniq)
	 				        	for malware in $Search_malwares_in_output_file_for_fix; do
		  								Cure_command=$(cat /root/maldet/Database_malwares| grep $malware| sort| uniq| cut -d":" -f2)
	          							if [ "$Cure_command" == "" ] ; then
                        						#just print on display
									  			#echo "Unknown malwares are: " >> /root/maldet/reports/Unknown_malwares.log
                        						cat /root/maldet/reports/Output_file_for_fix.log | grep $malware| xargs -I{} -n1 echo {} >> /root/maldet/reports/Unknown_malwares.log
                  						else
												#just print on display  
                        						#cat /root/maldet/reports/Output_file_for_fix.log | grep $i| xargs -I{} -n1 echo "Cure command: $Cure_command, infected file: " {}
												Malware_files=$(cat /root/maldet/reports/Output_file_for_fix.log | grep $malware| xargs -I{} -n1 echo {}| awk '{print $3}')
												All_infected_files=$(cat /root/maldet/reports/Output_file_for_fix.log | grep $malware| xargs -I{} -n1 echo {}| awk '{print $3}'| wc -l)
												$SETCOLOR_TITLE
												echo "Quantity all infected files are: $All_infected_files";
												$SETCOLOR_NORMAL
												for file in $Malware_files; do
														echo "Cure_command= $Cure_command Malware_files= $file";
														Action="$Cure_command $file"
														$Action
									    				`echo  $Action >> $Scaned_users` 	
														echo "Action= '$Action'";
														$SETCOLOR_TITLE
														echo "Malware <$malware> has been deleted from `hostname`";
														echo "________________________________________________________________";
														echo"";
														$SETCOLOR_NORMAL
														#
														# Add a check to block spamer's IP
														#
												done;
                  					  	fi 
         			    		    done;
         			    		    ServerName=$(cat /etc/httpd/conf/httpd.conf|grep -E "/$i/|ServerName|ServerAlias"|grep -B2 "/$i/public_html$"|grep ServerName| awk '{print $2}')
						    		$SETCOLOR_TITLE
						    		echo "ServerName= $ServerName";
						    		$SETCOLOR_NORMAL
						    		if [ -z $ServerName ]; then
											echo "Bad ServerName= $ServerName";
						    		else
											$SETCOLOR_TITLE
											echo "Exiqsumm= `exim -bp|exiqsumm | grep $ServerName`";
											$SETCOLOR_NORMAL
											if [ "`exim -bp|exiqsumm | grep $ServerName`" > "0" ]; then     
				       									exim -bp| exiqgrep -i -r$ServerName| xargs -n1 exim -Mrm &
				       									exim -bp| exiqgrep -i -f$ServerName| xargs -n1 exim -Mrm &
			     							fi       
						     		fi			
			 			    fi
			 				$SETCOLOR_TITLE
	    					echo "If you want, you could check maldet report scan in the folder /root/maldet/reports/home-$i";	
	    					$SETCOLOR_NORMAL										     
					done;	
			 fi	  	 	 		
 		 done;			  
	fi
 exim -bp| exiqgrep -i -r$HostName| xargs -n1 exim -Mrm
 Size_scaned_users=$(ls -al $Scaned_users |awk '{print $5}')
 if [ "$Size_scaned_users" -gt "7" ]; then
			mail -s " HOSTNAME is `hostname` + IP:`echo $Server_IP` SCANED folders:  " $List_of_emails < $Scaned_users
			echo "Scaned_users= $Scaned_users has been sent";
 fi
 if [ -s "$Unknown_malwares" ]; then
		 	# parsing the Unknown_malwares file and delete some wrong strs
		 	cat $Unknown_malwares |sed 's/.*maldet -q.*//'|sed 's/FILE HIT LIST://'|sed 's/To enable.*//'|sed 's/WARNING.*//'|sed 'N;$!P;$!D;$d'|sort|uniq > /root/maldet/reports/Unknown_malwares_greped.log
		 	Unknown_malwares_greped="/root/maldet/reports/Unknown_malwares_greped.log"
		 	Size_unknown_malwares_greped=$(ls -al $Unknown_malwares_greped |awk '{print $5}')
		 	Predetermined_size="7"
		 	if [ "$Size_unknown_malwares_greped" -gt "$Predetermined_size" ]; then	 
		 	  			Send_unknown_malwares_file=$(mail -s "Detected Unknown malwares on `hostname`+ `echo $Server_IP`" $List_of_emails < $Unknown_malwares_greped)	  
		 	  			if [ $? -eq 0 ]; then
			 						$SETCOLOR_TITLE
			 						echo "The email has been sent to `echo $List_of_emails`";
			 						$SETCOLOR_NORMAL
		 	  			else
			 						$SETCOLOR_TITLE
			 						echo "The email hasn't been sent to `echo $List_of_emails`";		
	       		 					$SETCOLOR_NORMAL		 
		 	  			fi   	 
		 	  					$SETCOLOR_TITLE
		 	  					echo "The folder /root/maldet has been deleted from server `echo $HostName`. Also, list of unknown malwares were been sent to `echo $List_of_emails`";
		 	  					$SETCOLOR_NORMAL
	 	  	else
		 			$SETCOLOR_TITLE
		 			echo "The folder /root/maldet has been deleted from server `hostname`";
		 			$SETCOLOR_NORMAL
		 	fi
 fi		 	
 rm -f /usr/local/src/detect_and_fix_malwares*
 #rm -rf /root/maldet		
 $SETCOLOR_TITLE
 echo "|---------------------------------------------------|";
 echo "|--------------------FINISHED-----------------------|";
 echo "|---------------------------------------------------|";
 $SETCOLOR_NORMAL
 echo "   .   ";
}
#if [ -z $* ]; then
if [ $# -lt 1 ]; then
	#
	All_folders_for_scan=$(tail -n 100000 /var/log/exim_mainlog| grep cwd=/home| cut -d"=" -f2| awk '{print $1}'| sort| uniq -c| awk '$1>200 {print $2}'|wc -l)
	Users_which_send_spam=$(tail -n 100000 /var/log/exim_mainlog| grep cwd=/home| cut -d"=" -f2| awk '{print $1}'| sort| uniq -c| awk '$1>200 {print $2}'| cut -d"/" -f3)
	Maldet_scan
fi	

while getopts "d:u:h" opt
do
	case $opt in
		u) echo "Found  argument for option $opt - $OPTARG"
		   HOMEUSER=$(echo $OPTARG)
		   All_folders_for_scan=$(echo $HOMEUSER|wc -l)
		   Will_scan_folders=$(echo "Will scan: `echo $All_folders_for_scan` user's folders.....")
		   Users_which_send_spam=$HOMEUSER
	           #
	           Maldet_scan
		   ;;
		d) echo "Found  argument for option $opt - $OPTARG"
		   HOMEUSER=$(/scripts/whoowns $OPTARG)
		   All_folders_for_scan=$(echo $HOMEUSER|wc -l)
		   Will_scan_folders=$(echo "Will scan: `echo $All_folders_for_scan` user's folders.....")
		   Users_which_send_spam=$HOMEUSER
		   #
	   	   Maldet_scan
		   ;;
		h) echo "Use: -u for username; -d for domain name; default: without any parameters";;	   
		*) echo "Use: -u for username; -d for domain name; default: without any parameters";;	 
	esac
done;
#
rm -f /usr/local/src/detect_and_fix_malwares_2.0.sh*
$SETCOLOR_TITLE
echo "|---------------------------------------------------|";
echo "|--------------------FINISHED-----------------------|";
echo "|---------------------------------------------------|";
$SETCOLOR_NORMAL
echo "   .   ";
